#!/bin/bash

GIT_HOST=github.com
GIT_USER=btn441
GIT_REPOSITORY=docker-npmc
GIT_PATH=https://$GIT_HOST/$GIT_USER/$GIT_REPOSITORY.git

MAKEFILE_NAME=Makefile

INSTALLER_NAME=install-npmc

FILE_DOCKER_MAKE_NAME=docker-make
FILE_DOCKER_MAKE_PATH=/bin/$FILE_DOCKER_MAKE_NAME

DIR_PATH=~/$GIT_REPOSITORY
DIR_DOCKER_NAME=docker
DIR_DOCKER_PATH=$DIR_PATH/$DIR_DOCKER_NAME
DIR_PROJECTS_NAME=projects
DIR_PROJECTS_PATH=$DIR_PATH/$DIR_PROJECTS_NAME
DIR_DB_NAME=db_data
DIR_DB_PATH=$DIR_DOCKER_PATH/$DIR_DB_NAME
DIR_NGINX_SITES_PATH=$DIR_DOCKER_PATH/nginx/sites

# Главная
function main {
    echo
    echo "Добро пожаловать в docker-npmc!"

    menu
}

# Меню установочника
function menu {
    echo
    echo "Меню"
    echo "1 - Установить"
    echo "2 - Обновить"
    echo "3 - Удалить"
    echo -n "Что выбираешь? (1, 2 or 3) "

    read item

    case "$item" in
        1) 
            install
            ;;
        2) 
            update
            ;;
        3) 
            delete
            ;;
    esac
}

# Выход из установочника
function exit_bash {
    echo
    echo "Завершение.."

    exit 0
}

# Установка исполняемого файла, для Makefile
function create_docker_make {
    echo "make -f $DIR_PATH/$MAKEFILE_NAME" | sudo tee -a $FILE_DOCKER_MAKE_PATH

    sudo chmod +x $FILE_DOCKER_MAKE_PATH
}

# Удаление исполняемого файла, для Makefile
function delete_docker_make {
    if [ -f "$FILE_DOCKER_MAKE_PATH" ]; then
        echo
        echo "Мы нашли $FILE_DOCKER_MAKE_PATH."
        echo "Хотите ли удалить этот файл? (y|N)"

        read item

        case "$item" in
            y|Y)
                sudo rm $FILE_DOCKER_MAKE_PATH
                ;;
            *) 
                echo "Хорошо. Мы не удалили $FILE_DOCKER_MAKE_PATH"
                ;;
        esac
    fi
}

# Установка репозитория
function install {
    function job {
        mkdir $DIR_PATH
        mkdir $DIR_PROJECTS_PATH 
        cd $DIR_PATH && git clone $GIT_PATH && mv $GIT_REPOSITORY $DIR_DOCKER_NAME
        cd $DIR_DOCKER_NAME && docker-compose build
        delete_docker_make        
        create_docker_make
        mv $DIR_DOCKER_PATH/$MAKEFILE_NAME $DIR_PATH/$MAKEFILE_NAME
        rm -rf $DIR_DOCKER_PATH/.git
        rm $DIR_DOCKER_PATH/.gitignore
        rm $DIR_DOCKER_PATH/$INSTALLER_NAME
    }

    if [ -d "$DIR_PATH" ]; then
        echo
        echo "Мы нашли директорию которую необходимо удалить!"
        echo "Проекты также будут удалены!"
        echo "Вы хотите удалить $DIR_PATH? (y|N)"

        read item

        case "$item" in
            y|Y)
                rm -rf $DIR_PATH
                job
                ;;
            n|N)
                exit_bash
                ;;
            *) 
                exit_bash
                ;;
        esac
    else
        job
    fi
}

# Обновление репозитория
function update {
    function job {
        sudo mv $DIR_DB_PATH $DIR_PATH/$DIR_DB_NAME
        mv $DIR_NGINX_SITES_PATH $DIR_PATH/sites
        rm -rf $DIR_DOCKER_PATH
        cd $DIR_PATH && git clone $GIT_PATH && mv $GIT_REPOSITORY $DIR_DOCKER_NAME        
        cd $DIR_DOCKER_NAME && docker-compose build
        sudo rm -rf $DIR_DB_PATH
        rm -rf $DIR_NGINX_SITES_PATH
        sudo mv $DIR_PATH/$DIR_DB_NAME $DIR_DB_PATH
        mv $DIR_PATH/sites $DIR_NGINX_SITES_PATH

        if [ -f "$FILE" ]; then
            echo
            echo "Хотите заменить $MAKEFILE_NAME? (y|N)"

            read item

            case "$item" in
                y|Y)
                    rm $DIR_PATH/$MAKEFILE_NAME 
                    mv $DIR_DOCKER_PATH/$MAKEFILE_NAME $DIR_PATH/$MAKEFILE_NAME
                    ;;
                n|N)
                    exit_bash
                    ;;
                *) 
                    exit_bash
                    ;;
            esac 
        else    
            mv $DIR_DOCKER_PATH/$MAKEFILE_NAME $DIR_PATH/$MAKEFILE_NAME
        fi       
    }

    echo
    echo "Будут удалены файлы связанные с Docker!"
    echo "Ваши проекты сохранятся!"
    echo "Вы точно хотите обновить? (y|N)"

    read item

    case "$item" in
        y|Y)
            job
            ;;
        n|N)
            exit_bash
            ;;
        *) 
            exit_bash
            ;;
    esac    
}

# Удаление репозитория
function delete {
    function job {
        sudo rm $FILE_DOCKER_MAKE_PATH

        if [ ! "$(ls -A $DIR_PROJECTS_PATH)" ]; then
            rm -rf $DIR_PATH
        else 
            rm -rf $DIR_DOCKER_PATH
            rm $DIR_PATH/$MAKEFILE_NAME 
        fi
    }
    
    echo
    echo "Будут удалены файлы связанные с Docker!"
    echo "Но ваши проекты мы сохраним!"
    echo "Вы точно хотите удалить? (y|N)"

    read item

    case "$item" in
        y|Y)
            job
            ;;
        n|N)
            exit_bash
            ;;
        *) 
            exit_bash
            ;;
    esac    
}

main
